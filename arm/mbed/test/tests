 var deviceserverModule = require("../deviceserver");

try {
  
  //var deviceServer = new deviceserverModule.DeviceServer({accessKey:"spEnuPFugD7kzccjnwxcRxJNVzIHDGydmZE7yN8O3jOKBd0O1vFFQBofpHpqQ1SW9j3P7qsOyBsOQxenCKmJcAKGvxApTJeC0PMf"});
  var deviceServer = new deviceserverModule.DeviceServer({appName:"scriptrtest"});
  var data = {};
  
  var directoryService = deviceServer.getDirectoryService();
  data.listEndpoints = directoryService.listEndpoints();
  /*try {
    data.getEndpoint = directoryService.getEndpoint("myendpoint");
  }catch(exception){
    console.log(JSON.stringify(exception));
  }*/
  
  /*
   * Play with notifications
   */
  var notificationService = deviceServer.getNotificationService();
  //data.registerCallback = notificationService.registerCallback({url:"https://iotdemos.scriptrapps.io/modules/arm/mbed/api/callback"});
  data.removeCallback = notificationService.removeCallback({url:"https://iotdemos.scriptrapps.io/modules/arm/mbed/api/callback"}); 
  
  /*
   * Play with endpoints and resources
   */
  if (data.listEndpoints) {
    
    var endpoint = data.listEndpoints[0];
    data.listResources = endpoint.listResources();
    
  	/*
     * Play with subscriptions
     */
    if (data.listResources.length > 0){
      
      var resource = data.listResources[2];
      
      var subscriptionService = deviceServer.getSubscriptionService();      
      //data.createSubscription = endpoint.createSubscription(resource.uri);
      //data.getSubscriptionFromEndpoint = endpoint.getSubscription(resource.uri);
      //data.getSubscriptionFromService = subscriptionService.getSubscription(endpoint.name + resource.uri);
      //data.listSubscriptions = subscriptionService.listSubscriptions();
      //data.deleteSubscription = endpoint.deleteSubscription(resource.uri);
      subscriptionService.deleteAllSubscriptions();
    } 
    
    /*
     * read from and write to resource
     */
    //data.readFromResource = endpoint.readFromResource(resource.uri);
  }
  
  //data.getTrafficLimit = deviceServer.getTrafficLimit();
  return data;
}catch(exception) {
  return exception;
}			